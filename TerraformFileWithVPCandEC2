provider "aws"{
 region = "ap-south-1"
}
locals{
instance_name = toset(["Server2", "Server3"])
ingress_rule = [{port=22},{port=80},{port=8080}]
}

resource "aws_instance" "s1"{
 for_each=local.instance_name
 vpc_security_group_ids = [aws_security_group.sg.id]
 associate_public_ip_address = true
 ami = "ami-0ef82eeba2c7a0eeb"
 key_name = "terraformkey"
 instance_type = "t2.micro"
 subnet_id = aws_subnet.mysubnet.id
 tags = {
 Name = each.key
}
}

output "instance_ip"{
value = aws_instance.s1["Server2"].public_ip
}

resource "aws_security_group" "sg"{
vpc_id = aws_vpc.myvpc.id
name  = "mysg2"
dynamic "ingress"{
  for_each = local.ingress_rule
  content{
   protocol = "TCP"
   from_port = ingress.value.port
   to_port = ingress.value.port
   cidr_blocks = ["0.0.0.0/0"]
}
}
}

resource "aws_vpc" "myvpc" {
  cidr_block       = "10.10.0.0/16"
    tags = {
    Name = "myvpc"
  }
}

resource "aws_subnet" "mysubnet" {
  vpc_id     = aws_vpc.myvpc.id
  cidr_block = "10.10.1.0/24"
  availability_zone = "ap-south-1a"
  tags = {
    Name = "mysubnet"
  }
}
resource "aws_internet_gateway" "gw" {
  vpc_id = aws_vpc.myvpc.id

  tags = {
    Name = "IG"
  }
}

resource "aws_route_table" "myroute" {
  vpc_id = aws_vpc.myvpc.id

  route {
    cidr_block = "0.0.0.0/0"
    gateway_id = aws_internet_gateway.gw.id
  }

  tags = {
    Name = "myroute"
  }
}
